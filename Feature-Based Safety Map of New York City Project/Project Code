{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["!pip install pyspark\n","!pip install spark"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9YTIoAmCqvHo","executionInfo":{"status":"ok","timestamp":1650126852983,"user_tz":240,"elapsed":57323,"user":{"displayName":"Victor C","userId":"02056495121097167022"}},"outputId":"d635a71d-5e17-4838-abee-80055210f24b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting pyspark\n","  Downloading pyspark-3.2.1.tar.gz (281.4 MB)\n","\u001b[K     |████████████████████████████████| 281.4 MB 33 kB/s \n","\u001b[?25hCollecting py4j==0.10.9.3\n","  Downloading py4j-0.10.9.3-py2.py3-none-any.whl (198 kB)\n","\u001b[K     |████████████████████████████████| 198 kB 36.0 MB/s \n","\u001b[?25hBuilding wheels for collected packages: pyspark\n","  Building wheel for pyspark (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for pyspark: filename=pyspark-3.2.1-py2.py3-none-any.whl size=281853642 sha256=260d9f27e645a1b8e5ae7bfbb92693bdead64669017a00d94e541edf0d562e14\n","  Stored in directory: /root/.cache/pip/wheels/9f/f5/07/7cd8017084dce4e93e84e92efd1e1d5334db05f2e83bcef74f\n","Successfully built pyspark\n","Installing collected packages: py4j, pyspark\n","Successfully installed py4j-0.10.9.3 pyspark-3.2.1\n","Collecting spark\n","  Downloading spark-0.2.1.tar.gz (41 kB)\n","\u001b[K     |████████████████████████████████| 41 kB 54 kB/s \n","\u001b[?25hBuilding wheels for collected packages: spark\n","  Building wheel for spark (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for spark: filename=spark-0.2.1-py3-none-any.whl size=58762 sha256=dc9240f60d58bf2e3e21fcc2c6675c821d35c8408e78e0d4cadb789ffea07528\n","  Stored in directory: /root/.cache/pip/wheels/4e/0e/f1/164619f9920fb447d294afaae11a7715bd442ded7225953d72\n","Successfully built spark\n","Installing collected packages: spark\n","Successfully installed spark-0.2.1\n"]}]},{"cell_type":"markdown","source":["Code to setup the environment to enable Spark and MongoDB connection"],"metadata":{"id":"UHga6vUKqANG"}},{"cell_type":"code","source":["#Files for the environment to run\n","!apt-get install openjdk-8-jdk-headless -qq > /dev/null\n","!wget -q https://archive.apache.org/dist/spark/spark-3.0.0/spark-3.0.0-bin-hadoop3.2.tgz\n","!tar xf spark-3.0.0-bin-hadoop3.2.tgz\n","\n","#Seting up the environment\n","import os\n","os.environ[\"JAVA_HOME\"] = \"/usr/lib/jvm/java-8-openjdk-amd64\"\n","os.environ[\"SPARK_HOME\"] = \"/content/spark-3.0.0-bin-hadoop3.2\"\n","\n","#Confirming the setup is complete. Output should be something similar to: '/content/spark-3.0.0-bin-hadoop3.2'\n","!pip install -q findspark\n","import findspark\n","findspark.init()\n","findspark.find()"],"metadata":{"id":"SW22k-6lqJq3"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Code to setup a session and create an RDD from MongoDB data"],"metadata":{"id":"luMAaFHiqk0Z"}},{"cell_type":"code","source":["#Setting up the session\n","from pyspark.sql import SparkSession\n","\n","spark = SparkSession\\\n",".builder\\\n",".appName(\"pyspark-ait614\")\\\n",".master(\"local\")\\\n",".config(\"spark.mongodb.input.uri\",\"mongodb+srv://erick614:AIT614@cluster0.kyshp.mongodb.net/AIT614DB.CrimeSamples?retryWrites=true&w=majority\")\\\n",".config(\"spark.mongodb.output.uri\",\"mongodb+srv://erick614:AIT614@cluster0.kyshp.mongodb.net/AIT614DB.CrimeSamples?retryWrites=true&w=majority\")\\\n",".config(\"spark.jars.packages\", \"org.mongodb.spark:mongo-spark-connector_10.0:3.0.0\")\\\n",".getOrCreate()\n","\n","#Confirming that the session was created\n","spark"],"metadata":{"id":"Rr1Q5-1tqq78"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Creating the dataframe\n","df01 = spark.read\\\n","    .format(\"com.mongodb.spark.sql.DefaultSource\")\\\n","    .option(\"database\",\"AIT614DB\")\\\n","    .option(\"collection\", \"CrimeSamples\")\\\n","    .load()\n","\n","#Confirming the dataframe was created\n","df01.printSchema()"],"metadata":{"id":"WJXWFF0Tq3uN"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Creating the dataframe from CSV import"],"metadata":{"id":"9i3qQHqcrCFU"}},{"cell_type":"code","source":["import pandas as pd\n","from pyspark.sql import Row, SparkSession\n","from pyspark.sql.functions import *\n","import numpy as np\n","import pandas as pd\n","import seaborn as sns\n","import matplotlib.pyplot as plt\n","import spark"],"metadata":{"id":"AmF6R62hqRRn"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":305},"id":"NTexyePspn7E","executionInfo":{"status":"ok","timestamp":1650127011909,"user_tz":240,"elapsed":169,"user":{"displayName":"Victor C","userId":"02056495121097167022"}},"outputId":"b80121d8-0a14-431b-c547-ff2baba7f64c"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   CMPLNT_NUM  ADDR_PCT_CD        BORO_NM CMPLNT_FR_DT   RPT_DT CMPLNT_FR_TM  \\\n","0   867603058           48          BRONX      8/12/17  8/12/17     22:30:00   \n","1   130762857           61       BROOKLYN      5/18/15  4/29/19      0:01:00   \n","2   122427940          121  STATEN ISLAND      6/25/16  6/28/16     12:40:00   \n","3   775688943           44          BRONX      8/29/17  8/29/17      0:01:00   \n","4   316156644           44          BRONX      1/10/19  1/10/19      4:50:00   \n","\n","  CRM_ATPT_CPTD_CD  KY_CD   LAW_CAT_CD SUSP_AGE_GROUP SUSP_RACE SUSP_SEX  \\\n","0        COMPLETED    236  MISDEMEANOR            NaN       NaN      NaN   \n","1        COMPLETED    341  MISDEMEANOR            NaN       NaN      NaN   \n","2        COMPLETED    341  MISDEMEANOR        UNKNOWN   UNKNOWN        M   \n","3        COMPLETED    351  MISDEMEANOR            NaN       NaN      NaN   \n","4        COMPLETED    341  MISDEMEANOR            NaN       NaN      NaN   \n","\n","  VIC_AGE_GROUP        VIC_RACE VIC_SEX   Latitude  Longitude  \n","0       UNKNOWN         UNKNOWN       E  40.850233 -73.882560  \n","1         45-64           WHITE       M  40.599585 -73.939767  \n","2       UNKNOWN         UNKNOWN       D  40.575804 -74.169812  \n","3         25-44  WHITE HISPANIC       M  40.833281 -73.925032  \n","4       UNKNOWN         UNKNOWN       D  40.840369 -73.918063  "],"text/html":["\n","  <div id=\"df-9fcd8692-3fcb-4f78-8dc7-59df371c56a9\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>CMPLNT_NUM</th>\n","      <th>ADDR_PCT_CD</th>\n","      <th>BORO_NM</th>\n","      <th>CMPLNT_FR_DT</th>\n","      <th>RPT_DT</th>\n","      <th>CMPLNT_FR_TM</th>\n","      <th>CRM_ATPT_CPTD_CD</th>\n","      <th>KY_CD</th>\n","      <th>LAW_CAT_CD</th>\n","      <th>SUSP_AGE_GROUP</th>\n","      <th>SUSP_RACE</th>\n","      <th>SUSP_SEX</th>\n","      <th>VIC_AGE_GROUP</th>\n","      <th>VIC_RACE</th>\n","      <th>VIC_SEX</th>\n","      <th>Latitude</th>\n","      <th>Longitude</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>867603058</td>\n","      <td>48</td>\n","      <td>BRONX</td>\n","      <td>8/12/17</td>\n","      <td>8/12/17</td>\n","      <td>22:30:00</td>\n","      <td>COMPLETED</td>\n","      <td>236</td>\n","      <td>MISDEMEANOR</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>UNKNOWN</td>\n","      <td>UNKNOWN</td>\n","      <td>E</td>\n","      <td>40.850233</td>\n","      <td>-73.882560</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>130762857</td>\n","      <td>61</td>\n","      <td>BROOKLYN</td>\n","      <td>5/18/15</td>\n","      <td>4/29/19</td>\n","      <td>0:01:00</td>\n","      <td>COMPLETED</td>\n","      <td>341</td>\n","      <td>MISDEMEANOR</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>45-64</td>\n","      <td>WHITE</td>\n","      <td>M</td>\n","      <td>40.599585</td>\n","      <td>-73.939767</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>122427940</td>\n","      <td>121</td>\n","      <td>STATEN ISLAND</td>\n","      <td>6/25/16</td>\n","      <td>6/28/16</td>\n","      <td>12:40:00</td>\n","      <td>COMPLETED</td>\n","      <td>341</td>\n","      <td>MISDEMEANOR</td>\n","      <td>UNKNOWN</td>\n","      <td>UNKNOWN</td>\n","      <td>M</td>\n","      <td>UNKNOWN</td>\n","      <td>UNKNOWN</td>\n","      <td>D</td>\n","      <td>40.575804</td>\n","      <td>-74.169812</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>775688943</td>\n","      <td>44</td>\n","      <td>BRONX</td>\n","      <td>8/29/17</td>\n","      <td>8/29/17</td>\n","      <td>0:01:00</td>\n","      <td>COMPLETED</td>\n","      <td>351</td>\n","      <td>MISDEMEANOR</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>25-44</td>\n","      <td>WHITE HISPANIC</td>\n","      <td>M</td>\n","      <td>40.833281</td>\n","      <td>-73.925032</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>316156644</td>\n","      <td>44</td>\n","      <td>BRONX</td>\n","      <td>1/10/19</td>\n","      <td>1/10/19</td>\n","      <td>4:50:00</td>\n","      <td>COMPLETED</td>\n","      <td>341</td>\n","      <td>MISDEMEANOR</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>UNKNOWN</td>\n","      <td>UNKNOWN</td>\n","      <td>D</td>\n","      <td>40.840369</td>\n","      <td>-73.918063</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9fcd8692-3fcb-4f78-8dc7-59df371c56a9')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-9fcd8692-3fcb-4f78-8dc7-59df371c56a9 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-9fcd8692-3fcb-4f78-8dc7-59df371c56a9');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":3}],"source":["csvPath = './crime_data_sample.csv'\n","csvData = pd.read_csv(csvPath)\n","\n","csvData.head()"]},{"cell_type":"code","source":["spark = SparkSession.builder.appName('AIT 614 Project').getOrCreate()\n","df = spark.read.csv('./crime_data_sample.csv', inferSchema=True, header=True)\n","df = df.cache()\n","df.printSchema()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lyKsadWxqic3","executionInfo":{"status":"ok","timestamp":1650127028687,"user_tz":240,"elapsed":14425,"user":{"displayName":"Victor C","userId":"02056495121097167022"}},"outputId":"8ab4e16a-0bb5-43c5-e5e1-93dec111e928"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["root\n"," |-- CMPLNT_NUM: integer (nullable = true)\n"," |-- ADDR_PCT_CD: integer (nullable = true)\n"," |-- BORO_NM: string (nullable = true)\n"," |-- CMPLNT_FR_DT: string (nullable = true)\n"," |-- RPT_DT: string (nullable = true)\n"," |-- CMPLNT_FR_TM: string (nullable = true)\n"," |-- CRM_ATPT_CPTD_CD: string (nullable = true)\n"," |-- KY_CD: integer (nullable = true)\n"," |-- LAW_CAT_CD: string (nullable = true)\n"," |-- SUSP_AGE_GROUP: string (nullable = true)\n"," |-- SUSP_RACE: string (nullable = true)\n"," |-- SUSP_SEX: string (nullable = true)\n"," |-- VIC_AGE_GROUP: string (nullable = true)\n"," |-- VIC_RACE: string (nullable = true)\n"," |-- VIC_SEX: string (nullable = true)\n"," |-- Latitude: double (nullable = true)\n"," |-- Longitude: double (nullable = true)\n","\n"]}]},{"cell_type":"code","source":["crime_type_groups = df.groupBy('LAW_CAT_CD').count()\n","crime_type_counts = crime_type_groups.orderBy('count', ascending=False)\n","crime_type_counts.show(truncate=False)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HH8meAq7sRyn","executionInfo":{"status":"ok","timestamp":1650127033808,"user_tz":240,"elapsed":2567,"user":{"displayName":"Victor C","userId":"02056495121097167022"}},"outputId":"4e788bd2-a5cc-491a-8273-fd7800e48c83"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["+-----------+-----+\n","|LAW_CAT_CD |count|\n","+-----------+-----+\n","|MISDEMEANOR|526  |\n","|FELONY     |328  |\n","|VIOLATION  |146  |\n","+-----------+-----+\n","\n"]}]},{"cell_type":"code","source":["feature_level_count_dic = []\n","\n","for feature in df.columns:\n","    print('Analysing %s' % feature)\n","    levels_list_df = df.select(feature).distinct()\n","    feature_level_count_dic.append({'feature': feature, 'level_count': levels_list_df.count()})"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cK26qRABPU9r","executionInfo":{"status":"ok","timestamp":1650127144081,"user_tz":240,"elapsed":6625,"user":{"displayName":"Victor C","userId":"02056495121097167022"}},"outputId":"29c1c059-6661-4288-fb7b-9f65c564478c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Analysing CMPLNT_NUM\n","Analysing ADDR_PCT_CD\n","Analysing BORO_NM\n","Analysing CMPLNT_FR_DT\n","Analysing RPT_DT\n","Analysing CMPLNT_FR_TM\n","Analysing CRM_ATPT_CPTD_CD\n","Analysing KY_CD\n","Analysing LAW_CAT_CD\n","Analysing SUSP_AGE_GROUP\n","Analysing SUSP_RACE\n","Analysing SUSP_SEX\n","Analysing VIC_AGE_GROUP\n","Analysing VIC_RACE\n","Analysing VIC_SEX\n","Analysing Latitude\n","Analysing Longitude\n"]}]},{"cell_type":"code","source":["pd.DataFrame(feature_level_count_dic).sort_values(by='level_count', ascending=False)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":582},"id":"L0QePDouPhV9","executionInfo":{"status":"ok","timestamp":1650127150833,"user_tz":240,"elapsed":145,"user":{"displayName":"Victor C","userId":"02056495121097167022"}},"outputId":"e0d7396e-821c-4f7d-ff58-b5ce881d488d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["             feature  level_count\n","0         CMPLNT_NUM         1000\n","16         Longitude          970\n","15          Latitude          968\n","4             RPT_DT          777\n","3       CMPLNT_FR_DT          774\n","5       CMPLNT_FR_TM          341\n","1        ADDR_PCT_CD           77\n","7              KY_CD           37\n","9     SUSP_AGE_GROUP            7\n","10         SUSP_RACE            7\n","13          VIC_RACE            7\n","12     VIC_AGE_GROUP            6\n","2            BORO_NM            5\n","11          SUSP_SEX            4\n","14           VIC_SEX            4\n","8         LAW_CAT_CD            3\n","6   CRM_ATPT_CPTD_CD            2"],"text/html":["\n","  <div id=\"df-e72c4d6e-202c-42c5-985a-7ed40309ff2e\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>feature</th>\n","      <th>level_count</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>CMPLNT_NUM</td>\n","      <td>1000</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>Longitude</td>\n","      <td>970</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>Latitude</td>\n","      <td>968</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>RPT_DT</td>\n","      <td>777</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>CMPLNT_FR_DT</td>\n","      <td>774</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>CMPLNT_FR_TM</td>\n","      <td>341</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>ADDR_PCT_CD</td>\n","      <td>77</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>KY_CD</td>\n","      <td>37</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>SUSP_AGE_GROUP</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>SUSP_RACE</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>VIC_RACE</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>VIC_AGE_GROUP</td>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>BORO_NM</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>SUSP_SEX</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>VIC_SEX</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>LAW_CAT_CD</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>CRM_ATPT_CPTD_CD</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e72c4d6e-202c-42c5-985a-7ed40309ff2e')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-e72c4d6e-202c-42c5-985a-7ed40309ff2e button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-e72c4d6e-202c-42c5-985a-7ed40309ff2e');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["from pyspark.ml.feature import StringIndexer, VectorAssembler\n","df_features = df.na.drop(subset=df.columns)\n","\n","for feature in feature_level_count_dic:\n","    indexer = StringIndexer(inputCol=feature['feature'], outputCol='%s_indexed' % feature['feature'])\n","    print('Fitting feature \"%s\"' % feature['feature'])\n","    model = indexer.fit(df_features)\n","    print('Transforming \"%s\"' % feature['feature'])\n","    df_features = model.transform(df_features)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"stnCA8yvPn6k","executionInfo":{"status":"ok","timestamp":1650127241101,"user_tz":240,"elapsed":6518,"user":{"displayName":"Victor C","userId":"02056495121097167022"}},"outputId":"3bbfef2c-1f02-47a4-a68c-de0e8e480072"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Fitting feature \"CMPLNT_NUM\"\n","Transforming \"CMPLNT_NUM\"\n","Fitting feature \"ADDR_PCT_CD\"\n","Transforming \"ADDR_PCT_CD\"\n","Fitting feature \"BORO_NM\"\n","Transforming \"BORO_NM\"\n","Fitting feature \"CMPLNT_FR_DT\"\n","Transforming \"CMPLNT_FR_DT\"\n","Fitting feature \"RPT_DT\"\n","Transforming \"RPT_DT\"\n","Fitting feature \"CMPLNT_FR_TM\"\n","Transforming \"CMPLNT_FR_TM\"\n","Fitting feature \"CRM_ATPT_CPTD_CD\"\n","Transforming \"CRM_ATPT_CPTD_CD\"\n","Fitting feature \"KY_CD\"\n","Transforming \"KY_CD\"\n","Fitting feature \"LAW_CAT_CD\"\n","Transforming \"LAW_CAT_CD\"\n","Fitting feature \"SUSP_AGE_GROUP\"\n","Transforming \"SUSP_AGE_GROUP\"\n","Fitting feature \"SUSP_RACE\"\n","Transforming \"SUSP_RACE\"\n","Fitting feature \"SUSP_SEX\"\n","Transforming \"SUSP_SEX\"\n","Fitting feature \"VIC_AGE_GROUP\"\n","Transforming \"VIC_AGE_GROUP\"\n","Fitting feature \"VIC_RACE\"\n","Transforming \"VIC_RACE\"\n","Fitting feature \"VIC_SEX\"\n","Transforming \"VIC_SEX\"\n","Fitting feature \"Latitude\"\n","Transforming \"Latitude\"\n","Fitting feature \"Longitude\"\n","Transforming \"Longitude\"\n"]}]},{"cell_type":"code","source":["response_indexer = StringIndexer(inputCol='primary_type', outputCol='primary_type_indexed')\n","response_model = response_indexer.fit(df_features)\n","df_features = response_model.transform(df_features)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":797},"id":"W8DEnFvKP7v1","executionInfo":{"status":"error","timestamp":1650127272915,"user_tz":240,"elapsed":134,"user":{"displayName":"Victor C","userId":"02056495121097167022"}},"outputId":"f6a758fb-6c7a-4f7a-a80a-12d1de823cba"},"execution_count":null,"outputs":[{"output_type":"error","ename":"Py4JJavaError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mPy4JJavaError\u001b[0m                             Traceback (most recent call last)","\u001b[0;32m<ipython-input-14-1a3258320f9e>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mresponse_indexer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mStringIndexer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0minputCol\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'primary_type'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0moutputCol\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'primary_type_indexed'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mresponse_model\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mresponse_indexer\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdf_features\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      3\u001b[0m \u001b[0mdf_features\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mresponse_model\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtransform\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdf_features\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pyspark/ml/base.py\u001b[0m in \u001b[0;36mfit\u001b[0;34m(self, dataset, params)\u001b[0m\n\u001b[1;32m    159\u001b[0m                 \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mparams\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_fit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdataset\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    160\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 161\u001b[0;31m                 \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_fit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdataset\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    162\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    163\u001b[0m             raise TypeError(\"Params must be either a param map or a list/tuple of param maps, \"\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pyspark/ml/wrapper.py\u001b[0m in \u001b[0;36m_fit\u001b[0;34m(self, dataset)\u001b[0m\n\u001b[1;32m    333\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    334\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_fit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdataset\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 335\u001b[0;31m         \u001b[0mjava_model\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_fit_java\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdataset\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    336\u001b[0m         \u001b[0mmodel\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_create_model\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mjava_model\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    337\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_copyValues\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmodel\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pyspark/ml/wrapper.py\u001b[0m in \u001b[0;36m_fit_java\u001b[0;34m(self, dataset)\u001b[0m\n\u001b[1;32m    330\u001b[0m         \"\"\"\n\u001b[1;32m    331\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_transfer_params_to_java\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 332\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_java_obj\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdataset\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_jdf\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    333\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    334\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_fit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdataset\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/py4j/java_gateway.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, *args)\u001b[0m\n\u001b[1;32m   1320\u001b[0m         \u001b[0manswer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgateway_client\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msend_command\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcommand\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1321\u001b[0m         return_value = get_return_value(\n\u001b[0;32m-> 1322\u001b[0;31m             answer, self.gateway_client, self.target_id, self.name)\n\u001b[0m\u001b[1;32m   1323\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1324\u001b[0m         \u001b[0;32mfor\u001b[0m \u001b[0mtemp_arg\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mtemp_args\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pyspark/sql/utils.py\u001b[0m in \u001b[0;36mdeco\u001b[0;34m(*a, **kw)\u001b[0m\n\u001b[1;32m    109\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mdeco\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0ma\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkw\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    110\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 111\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mf\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0ma\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkw\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    112\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mpy4j\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mprotocol\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mPy4JJavaError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    113\u001b[0m             \u001b[0mconverted\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mconvert_exception\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0me\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mjava_exception\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/py4j/protocol.py\u001b[0m in \u001b[0;36mget_return_value\u001b[0;34m(answer, gateway_client, target_id, name)\u001b[0m\n\u001b[1;32m    326\u001b[0m                 raise Py4JJavaError(\n\u001b[1;32m    327\u001b[0m                     \u001b[0;34m\"An error occurred while calling {0}{1}{2}.\\n\"\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 328\u001b[0;31m                     format(target_id, \".\", name), value)\n\u001b[0m\u001b[1;32m    329\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    330\u001b[0m                 raise Py4JError(\n","\u001b[0;31mPy4JJavaError\u001b[0m: An error occurred while calling o877.fit.\n: org.apache.spark.SparkException: Input column primary_type does not exist.\n\tat org.apache.spark.ml.feature.StringIndexerBase.$anonfun$validateAndTransformSchema$2(StringIndexer.scala:128)\n\tat scala.collection.TraversableLike.$anonfun$flatMap$1(TraversableLike.scala:293)\n\tat scala.collection.IndexedSeqOptimized.foreach(IndexedSeqOptimized.scala:36)\n\tat scala.collection.IndexedSeqOptimized.foreach$(IndexedSeqOptimized.scala:33)\n\tat scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:198)\n\tat scala.collection.TraversableLike.flatMap(TraversableLike.scala:293)\n\tat scala.collection.TraversableLike.flatMap$(TraversableLike.scala:290)\n\tat scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:198)\n\tat org.apache.spark.ml.feature.StringIndexerBase.validateAndTransformSchema(StringIndexer.scala:123)\n\tat org.apache.spark.ml.feature.StringIndexerBase.validateAndTransformSchema$(StringIndexer.scala:115)\n\tat org.apache.spark.ml.feature.StringIndexer.validateAndTransformSchema(StringIndexer.scala:145)\n\tat org.apache.spark.ml.feature.StringIndexer.transformSchema(StringIndexer.scala:252)\n\tat org.apache.spark.ml.PipelineStage.transformSchema(Pipeline.scala:71)\n\tat org.apache.spark.ml.feature.StringIndexer.fit(StringIndexer.scala:237)\n\tat jdk.internal.reflect.GeneratedMethodAccessor89.invoke(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\n\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357)\n\tat py4j.Gateway.invoke(Gateway.java:282)\n\tat py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\n\tat py4j.commands.CallCommand.execute(CallCommand.java:79)\n\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\n\tat py4j.ClientServerConnection.run(ClientServerConnection.java:106)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\n"]}]}]}